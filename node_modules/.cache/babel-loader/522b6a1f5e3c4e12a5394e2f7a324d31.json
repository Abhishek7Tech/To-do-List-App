{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\abhis\\\\Documents\\\\React.js\\\\React-Fetch\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState } from 'react';\nimport MoviesList from './components/MoviesList';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  // const dummyMovies = [\n  //   {\n  //     id: 1,\n  //     title: 'Some Dummy Movie',\n  //     openingText: 'This is the opening text of the movie',\n  //     releaseDate: '2021-05-18',\n  //   },\n  //   {\n  //     id: 2,\n  //     title: 'Some Dummy Movie 2',\n  //     openingText: 'This is the second opening text of the movie',\n  //     releaseDate: '2021-05-19',\n  //   },\n  // ];\n  const [movies, setMovies] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  async function fetchMovieHandler() {\n    setLoading(true);\n    setError(null);\n    const response = await fetch('https://swapi.dev/api/films/');\n    const data = await response.json();\n    const details = data.results.map(movieData => {\n      return {\n        id: movieData.episode_id,\n        title: movieData.title,\n        openingText: movieData.opening_crawl,\n        releaseDate: movieData.release_date\n      };\n    });\n    setMovies(details);\n    setLoading(false);\n  }\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: fetchMovieHandler,\n        children: \"Fetch Movies\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [!loading && movies.length > 0 && /*#__PURE__*/_jsxDEV(MoviesList, {\n        movies: movies\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 42\n      }, this), !loading && movies.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Found No Movies.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 44\n      }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 20\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"BDdBcsbS0pb6R5VbuHrCiscv90o=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/abhis/Documents/React.js/React-Fetch/src/App.js"],"names":["React","useState","MoviesList","App","movies","setMovies","loading","setLoading","error","setError","fetchMovieHandler","response","fetch","data","json","details","results","map","movieData","id","episode_id","title","openingText","opening_crawl","releaseDate","release_date","length"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAO,WAAP;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,QAAM,CAACC,MAAD,EAAQC,SAAR,IAAqBJ,QAAQ,CAAC,EAAD,CAAnC;AACA,QAAM,CAACK,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACO,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,IAAD,CAAlC;;AAED,iBAAeS,iBAAf,GAAmC;AAE/BH,IAAAA,UAAU,CAAC,IAAD,CAAV;AACAE,IAAAA,QAAQ,CAAC,IAAD,CAAR;AACD,UAAME,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAAD,CAA5B;AACA,UAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;AAGA,UAAMC,OAAO,GAAGF,IAAI,CAACG,OAAL,CAAaC,GAAb,CAAiBC,SAAS,IAAI;AAC5C,aAAO;AACLC,QAAAA,EAAE,EAAED,SAAS,CAACE,UADT;AAELC,QAAAA,KAAK,EAAEH,SAAS,CAACG,KAFZ;AAGLC,QAAAA,WAAW,EAAEJ,SAAS,CAACK,aAHlB;AAILC,QAAAA,WAAW,EAAEN,SAAS,CAACO;AAJlB,OAAP;AAMD,KAPe,CAAhB;AASApB,IAAAA,SAAS,CAACU,OAAD,CAAT;AAEDR,IAAAA,UAAU,CAAC,KAAD,CAAV;AACA;;AAGD,sBACE,QAAC,KAAD,CAAO,QAAP;AAAA,4BACE;AAAA,6BACE;AAAQ,QAAA,OAAO,EAAIG,iBAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAIE;AAAA,iBACE,CAACJ,OAAD,IAAYF,MAAM,CAACsB,MAAP,GAAgB,CAA5B,iBAAiC,QAAC,UAAD;AAAY,QAAA,MAAM,EAAGtB;AAArB;AAAA;AAAA;AAAA;AAAA,cADnC,EAEE,CAACE,OAAD,IAAYF,MAAM,CAACsB,MAAP,KAAkB,CAA9B,iBAAmC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFrC,EAGEpB,OAAO,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHb;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAYD;;GAvDQH,G;;KAAAA,G;AAyDT,eAAeA,GAAf","sourcesContent":["import React from 'react';\nimport { useState } from 'react';\nimport MoviesList from './components/MoviesList';\nimport './App.css';\n\nfunction App() {\n  // const dummyMovies = [\n  //   {\n  //     id: 1,\n  //     title: 'Some Dummy Movie',\n  //     openingText: 'This is the opening text of the movie',\n  //     releaseDate: '2021-05-18',\n  //   },\n  //   {\n  //     id: 2,\n  //     title: 'Some Dummy Movie 2',\n  //     openingText: 'This is the second opening text of the movie',\n  //     releaseDate: '2021-05-19',\n  //   },\n  // ];\n\n  const [movies,setMovies] = useState([]); \n  const [loading ,setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n async function fetchMovieHandler() {\n\n     setLoading(true);\n     setError(null)\n    const response = await fetch('https://swapi.dev/api/films/');\n    const data = await response.json();\n\n\n    const details = data.results.map(movieData => {\n      return {\n        id: movieData.episode_id,\n        title: movieData.title,\n        openingText: movieData.opening_crawl,\n        releaseDate: movieData.release_date\n      };\n    });\n\n    setMovies(details);\n   \n   setLoading(false);\n  }\n\n\n  return (\n    <React.Fragment>\n      <section>\n       {<button onClick = {fetchMovieHandler}>Fetch Movies</button>}\n      </section>\n      <section>\n       {!loading && movies.length > 0 && <MoviesList movies= {movies} />}\n       {!loading && movies.length === 0 && <p>Found No Movies.</p>}\n       {loading && <p>Loading</p>}\n      </section>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}