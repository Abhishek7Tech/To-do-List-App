{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useReducer, useState } from 'react';\n\nconst reducer = (state, action) => {\n  return reducer;\n};\n\nconst initialState = {\n  value: '',\n  isTouched: false\n};\n\nconst useInput = validateValue => {\n  _s();\n\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const [enteredValue, setEnteredValue] = useState('');\n  const [isTouched, setIsTouched] = useState(false);\n  const valueIsValid = validateValue(enteredValue);\n  const hasError = !valueIsValid && isTouched;\n\n  const valueChangeHandler = event => {\n    setEnteredValue(event.target.value);\n  };\n\n  const inputBlurHandler = event => {\n    setIsTouched(true);\n  };\n\n  const reset = () => {\n    setEnteredValue('');\n    setIsTouched(false);\n  };\n\n  return {\n    value: enteredValue,\n    isValid: valueIsValid,\n    hasError,\n    valueChangeHandler,\n    inputBlurHandler,\n    reset\n  };\n};\n\n_s(useInput, \"Syn/zHsnXkhHmVP+h06Qsl8ACdI=\");\n\nexport default useInput;","map":{"version":3,"sources":["C:/Users/abhis/Documents/React.js/React-Forms/src/components/hooks/use-Input.js"],"names":["useReducer","useState","reducer","state","action","initialState","value","isTouched","useInput","validateValue","dispatch","enteredValue","setEnteredValue","setIsTouched","valueIsValid","hasError","valueChangeHandler","event","target","inputBlurHandler","reset","isValid"],"mappings":";;AAAA,SAASA,UAAT,EAAqBC,QAArB,QAAqC,OAArC;;AAEA,MAAMC,OAAO,GAAG,CAACC,KAAD,EAAOC,MAAP,KAAiB;AAI7B,SAAOF,OAAP;AACH,CALD;;AAOA,MAAMG,YAAY,GAAG;AACjBC,EAAAA,KAAK,EAAG,EADS;AAEjBC,EAAAA,SAAS,EAAG;AAFK,CAArB;;AAKA,MAAMC,QAAQ,GAAIC,aAAD,IAAmB;AAAA;;AAEhC,QAAK,CAACN,KAAD,EAAOO,QAAP,IAAmBV,UAAU,CAACE,OAAD,EAASG,YAAT,CAAlC;AAGF,QAAM,CAACM,YAAD,EAAeC,eAAf,IAAkCX,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAACM,SAAD,EAAYM,YAAZ,IAA4BZ,QAAQ,CAAC,KAAD,CAA1C;AAEA,QAAMa,YAAY,GAAGL,aAAa,CAACE,YAAD,CAAlC;AACA,QAAMI,QAAQ,GAAG,CAACD,YAAD,IAAiBP,SAAlC;;AAEA,QAAMS,kBAAkB,GAAIC,KAAD,IAAW;AACpCL,IAAAA,eAAe,CAACK,KAAK,CAACC,MAAN,CAAaZ,KAAd,CAAf;AACD,GAFD;;AAIA,QAAMa,gBAAgB,GAAIF,KAAD,IAAW;AAClCJ,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACD,GAFD;;AAIA,QAAMO,KAAK,GAAG,MAAM;AAClBR,IAAAA,eAAe,CAAC,EAAD,CAAf;AACAC,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,GAHD;;AAKA,SAAO;AACLP,IAAAA,KAAK,EAAEK,YADF;AAELU,IAAAA,OAAO,EAAEP,YAFJ;AAGLC,IAAAA,QAHK;AAILC,IAAAA,kBAJK;AAKLG,IAAAA,gBALK;AAMLC,IAAAA;AANK,GAAP;AAQD,CAhCD;;GAAMZ,Q;;AAkCN,eAAeA,QAAf","sourcesContent":["import { useReducer, useState } from 'react';\r\n\r\nconst reducer = (state,action) =>{\r\n\r\n   \r\n\r\n    return reducer;\r\n}\r\n\r\nconst initialState = {\r\n    value : '',\r\n    isTouched : false,\r\n}\r\n\r\nconst useInput = (validateValue) => {\r\n\r\n    const[state,dispatch] = useReducer(reducer,initialState);\r\n\r\n\r\n  const [enteredValue, setEnteredValue] = useState('');\r\n  const [isTouched, setIsTouched] = useState(false);\r\n\r\n  const valueIsValid = validateValue(enteredValue);\r\n  const hasError = !valueIsValid && isTouched;\r\n\r\n  const valueChangeHandler = (event) => {\r\n    setEnteredValue(event.target.value);\r\n  };\r\n\r\n  const inputBlurHandler = (event) => {\r\n    setIsTouched(true);\r\n  };\r\n\r\n  const reset = () => {\r\n    setEnteredValue('');\r\n    setIsTouched(false);\r\n  };\r\n\r\n  return {\r\n    value: enteredValue,\r\n    isValid: valueIsValid,\r\n    hasError,\r\n    valueChangeHandler,\r\n    inputBlurHandler,\r\n    reset\r\n  };\r\n};\r\n\r\nexport default useInput;\r\n"]},"metadata":{},"sourceType":"module"}