{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useReducer, useState } from 'react';\n\nconst reducer = (state, action) => {\n  if (action.type === \"INPUT\") {\n    reducer;\n  }\n\n  return reducer;\n};\n\nconst initialState = {\n  value: '',\n  isTouched: false\n};\n\nconst useInput = validateValue => {\n  _s();\n\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const valueIsValid = validateValue(state.value);\n  const hasError = !valueIsValid && state.isTouched;\n\n  const valueChangeHandler = event => {\n    dispatch({\n      type: 'INPUT',\n      value: event.target.value\n    });\n  };\n\n  const inputBlurHandler = event => {\n    dispatch({\n      type: 'BLUR'\n    });\n  };\n\n  const reset = () => {\n    dispatch({\n      type: \"RESET\"\n    });\n  };\n\n  return {\n    value: enteredValue,\n    isValid: valueIsValid,\n    hasError,\n    valueChangeHandler,\n    inputBlurHandler,\n    reset\n  };\n};\n\n_s(useInput, \"UrEkDPQH5U12xnblC9PjDJeyoVE=\");\n\nexport default useInput;","map":{"version":3,"sources":["C:/Users/abhis/Documents/React.js/React-Forms/src/components/hooks/use-Input.js"],"names":["useReducer","useState","reducer","state","action","type","initialState","value","isTouched","useInput","validateValue","dispatch","valueIsValid","hasError","valueChangeHandler","event","target","inputBlurHandler","reset","enteredValue","isValid"],"mappings":";;AAAA,SAASA,UAAT,EAAqBC,QAArB,QAAqC,OAArC;;AAEA,MAAMC,OAAO,GAAG,CAACC,KAAD,EAAOC,MAAP,KAAiB;AACjC,MAAGA,MAAM,CAACC,IAAP,KAAgB,OAAnB,EAA2B;AACvBH,IAAAA,OAAO;AACV;;AAGG,SAAOA,OAAP;AACH,CAPD;;AASA,MAAMI,YAAY,GAAG;AACjBC,EAAAA,KAAK,EAAG,EADS;AAEjBC,EAAAA,SAAS,EAAG;AAFK,CAArB;;AAKA,MAAMC,QAAQ,GAAIC,aAAD,IAAmB;AAAA;;AAEhC,QAAK,CAACP,KAAD,EAAOQ,QAAP,IAAmBX,UAAU,CAACE,OAAD,EAASI,YAAT,CAAlC;AAIF,QAAMM,YAAY,GAAGF,aAAa,CAACP,KAAK,CAACI,KAAP,CAAlC;AACA,QAAMM,QAAQ,GAAG,CAACD,YAAD,IAAiBT,KAAK,CAACK,SAAxC;;AAEA,QAAMM,kBAAkB,GAAIC,KAAD,IAAW;AACpCJ,IAAAA,QAAQ,CAAC;AAACN,MAAAA,IAAI,EAAE,OAAP;AAAgBE,MAAAA,KAAK,EAAEQ,KAAK,CAACC,MAAN,CAAaT;AAApC,KAAD,CAAR;AACD,GAFD;;AAIA,QAAMU,gBAAgB,GAAIF,KAAD,IAAW;AAClCJ,IAAAA,QAAQ,CAAC;AAACN,MAAAA,IAAI,EAAG;AAAR,KAAD,CAAR;AACD,GAFD;;AAIA,QAAMa,KAAK,GAAG,MAAM;AACrBP,IAAAA,QAAQ,CAAC;AAACN,MAAAA,IAAI,EAAG;AAAR,KAAD,CAAR;AACA,GAFC;;AAIA,SAAO;AACLE,IAAAA,KAAK,EAAEY,YADF;AAELC,IAAAA,OAAO,EAAER,YAFJ;AAGLC,IAAAA,QAHK;AAILC,IAAAA,kBAJK;AAKLG,IAAAA,gBALK;AAMLC,IAAAA;AANK,GAAP;AAQD,CA7BD;;GAAMT,Q;;AA+BN,eAAeA,QAAf","sourcesContent":["import { useReducer, useState } from 'react';\r\n\r\nconst reducer = (state,action) =>{\r\nif(action.type === \"INPUT\"){\r\n    reducer\r\n}\r\n   \r\n\r\n    return reducer;\r\n}\r\n\r\nconst initialState = {\r\n    value : '',\r\n    isTouched : false,\r\n}\r\n\r\nconst useInput = (validateValue) => {\r\n\r\n    const[state,dispatch] = useReducer(reducer,initialState);\r\n\r\n\r\n  \r\n  const valueIsValid = validateValue(state.value);\r\n  const hasError = !valueIsValid && state.isTouched;\r\n\r\n  const valueChangeHandler = (event) => {\r\n    dispatch({type: 'INPUT', value: event.target.value});\r\n  };\r\n\r\n  const inputBlurHandler = (event) => {\r\n    dispatch({type : 'BLUR'});\r\n  };\r\n\r\n  const reset = () => {\r\n dispatch({type : \"RESET\"});  \r\n};\r\n\r\n  return {\r\n    value: enteredValue,\r\n    isValid: valueIsValid,\r\n    hasError,\r\n    valueChangeHandler,\r\n    inputBlurHandler,\r\n    reset\r\n  };\r\n};\r\n\r\nexport default useInput;\r\n"]},"metadata":{},"sourceType":"module"}