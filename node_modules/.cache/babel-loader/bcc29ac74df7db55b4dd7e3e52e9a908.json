{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\abhis\\\\Documents\\\\My Web Sites\\\\Tasks\\\\src\\\\components\\\\TaskList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport Delete from './Delete';\nimport styles from './TaskList.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction TaskList(props) {\n  _s();\n\n  localStorage.setItem(props.task, props.des);\n  const store = [];\n\n  for (let i = 0; i < localStorage.length; i++) {\n    // console.log(localStorage.getItem(localStorage.key(i)));\n    setStore(store.unshift({\n      id: localStorage.key(i),\n      des: localStorage.getItem(localStorage.key(i))\n    }));\n  } //  const [background , setBackground] = useState(styles.section);\n  // const completed = [];\n\n\n  const [complete, setIsComplete] = useState([]);\n\n  const onCompleteHandler = event => {\n    setIsComplete([...complete, event.currentTarget.id]); //   let ids = event.currentTarget.id;\n    //   // array.push(ids);\n    // completed = [ids,...completed];\n    // console.log(`Length : ${complete.length}`);\n    //   for(let i = 0; i < completed.length; i++){\n    //     setIsComplete(completed[i]);\n    //   }\n  };\n\n  let [del, setDel] = useState(false);\n  let [deleteID, setDelID] = useState('');\n\n  const onDeleteHandler = event => {\n    const ids = event.currentTarget.id;\n    console.log('TaksList :' + ids);\n    setDel(!del);\n    setDelID(ids); // console.log(ids);\n    // closeHandler();\n  }; // useEffect (() => {\n  //   \n  //   closeHandler();\n  // },[del]\n  // );  \n\n\n  const [deleted, setDeleted] = useState(store);\n\n  const deleteListItem = () => {\n    console.log(\"Dlete.js :\" + deleteID); // console.log(\"Dlete.js :\" + deleteID);\n\n    const filteredStore = deleted.filter(task => task.id !== deleteID);\n    setDelted([filteredStore]);\n    localStorage.removeItem(props.id);\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.div,\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: styles.ul,\n        children: store.map(task => {\n          const checked = complete.includes(task.id);\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            className: styles.list,\n            children: /*#__PURE__*/_jsxDEV(\"section\", {\n              className: `${checked === true ? styles.completeSection : styles.section}`,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: styles.heder,\n                children: /*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: [\" Task No:\", task.id, \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 91,\n                  columnNumber: 9\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 7\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: styles.task,\n                children: /*#__PURE__*/_jsxDEV(\"h2\", {\n                  children: [\" \", task.des, \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 94,\n                  columnNumber: 9\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 7\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: styles.btn,\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  className: `${checked === false ? styles.del : styles.ondel}`,\n                  id: task.id,\n                  onClick: onDeleteHandler,\n                  type: \"submit\",\n                  children: \"Delete\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 98,\n                  columnNumber: 9\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: `${checked === false ? styles.com : styles.comDisabled}`,\n                  id: task.id,\n                  onClick: onCompleteHandler,\n                  type: \"submit\",\n                  children: \"Complete\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 99,\n                  columnNumber: 9\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 7\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 9\n            }, this)\n          }, task.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 10\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 4\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 4\n    }, this), del && /*#__PURE__*/_jsxDEV(Delete, {\n      store: store,\n      id: deleteID,\n      setDel: setDel\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 4\n  }, this);\n}\n\n_s(TaskList, \"zLv6wG4LIprDjGXJSDqYxMu2qxs=\");\n\n_c = TaskList;\nexport default TaskList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TaskList\");","map":{"version":3,"sources":["C:/Users/abhis/Documents/My Web Sites/Tasks/src/components/TaskList.js"],"names":["React","useEffect","useState","Delete","styles","TaskList","props","localStorage","setItem","task","des","store","i","length","setStore","unshift","id","key","getItem","complete","setIsComplete","onCompleteHandler","event","currentTarget","del","setDel","deleteID","setDelID","onDeleteHandler","ids","console","log","deleted","setDeleted","deleteListItem","filteredStore","filter","setDelted","removeItem","div","ul","map","checked","includes","list","completeSection","section","heder","btn","ondel","com","comDisabled"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport Delete from './Delete';\r\nimport styles from './TaskList.module.css';\r\n\r\n\r\n\r\nfunction TaskList(props) {\r\n\r\n  localStorage.setItem(props.task , props.des);\r\n\r\n  \r\n  const store = []\r\n\r\n  for(let i = 0; i <localStorage.length;i++){\r\n    // console.log(localStorage.getItem(localStorage.key(i)));\r\n       setStore( store.unshift({\r\n         id: localStorage.key(i),\r\n         des:localStorage.getItem(localStorage.key(i))\r\n       }));\r\n  }\r\n\r\n//  const [background , setBackground] = useState(styles.section);\r\n\r\n// const completed = [];\r\n\r\nconst [complete , setIsComplete] = useState([]);\r\n\r\nconst onCompleteHandler = (event) => {\r\n\r\n  setIsComplete([...complete , event.currentTarget.id])\r\n  \r\n//   let ids = event.currentTarget.id;\r\n\r\n//   // array.push(ids);\r\n// completed = [ids,...completed];\r\n\r\n// console.log(`Length : ${complete.length}`);\r\n \r\n//   for(let i = 0; i < completed.length; i++){\r\n//     setIsComplete(completed[i]);\r\n//   }\r\n};\r\n\r\nlet [del ,setDel] = useState(false);\r\n\r\n  let [deleteID , setDelID] = useState('');\r\n\r\n\r\n  const onDeleteHandler = (event) => {\r\n    \r\n\r\n    const ids = event.currentTarget.id; \r\n    console.log('TaksList :' + ids); \r\n    setDel(!del);\r\n      \r\n    setDelID(ids);\r\n    // console.log(ids);\r\n    // closeHandler();\r\n\r\n  \r\n  };\r\n\r\n// useEffect (() => {\r\n//   \r\n//   closeHandler();\r\n// },[del]\r\n\r\n// );  \r\n\r\nconst [deleted ,setDeleted] = useState(store);\r\n\r\nconst deleteListItem = () => {\r\n  console.log(\"Dlete.js :\" + deleteID);\r\n  // console.log(\"Dlete.js :\" + deleteID);\r\n  const filteredStore = deleted.filter((task) => task.id !== deleteID);\r\n  setDelted([filteredStore]);\r\n  localStorage.removeItem(props.id);\r\n}\r\n\r\n return (\r\n   <React.Fragment>\r\n   <div className= {styles.div}>\r\n   <ul className = {styles.ul}>\r\n    {store.map((task ) => {\r\n      const checked = complete.includes(task.id);\r\n      \r\n       return(\r\n         <li  className ={styles.list}  key = {task.id}>\r\n        <section className = {`${checked === true ? styles.completeSection : styles.section }`}>\r\n      <div className = {styles.heder}>\r\n        <h3> Task No:{task.id} </h3>\r\n      </div>\r\n      <div className = {styles.task}>\r\n        <h2> {task.des} </h2>\r\n      </div>\r\n\r\n      <div className = {styles.btn}>\r\n        <button className =  {`${checked === false ? styles.del : styles.ondel}`} id = {task.id} onClick = {onDeleteHandler } type=\"submit\">Delete</button>\r\n        <button className =  {`${checked === false ? styles.com : styles.comDisabled}`} id = {task.id} onClick ={onCompleteHandler} type='submit'>Complete</button>\r\n      </div>\r\n    </section>\r\n     </li>\r\n  )\r\n  \r\n})}\r\n </ul>\r\n </div>\r\n {del  && <Delete store = {store} id = {deleteID } setDel = {setDel}/>} \r\n</React.Fragment>\r\n); \r\n\r\n}\r\n\r\nexport default TaskList;\r\n"]},"metadata":{},"sourceType":"module"}