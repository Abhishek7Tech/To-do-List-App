{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\abhis\\\\Documents\\\\React.js\\\\React-Forms\\\\src\\\\components\\\\BasicForm.js\",\n    _s = $RefreshSig$();\n\nimport useUserInput from \"./hooks/useInput\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst BasicForm = props => {\n  _s();\n\n  const {\n    value: firstNameValue,\n    isValid: firstNameIsValid,\n    valueChangeHandler: firstNameChangeHandler,\n    inputBlurHandler: firstNameBlurHandler,\n    reset: resetFirstName,\n    hasError: firstNameError\n  } = useUserInput(value => value.trim() !== '');\n  const {\n    value: lastNameValue,\n    isValid: lastNameIsValid,\n    valueChangeHandler: lastNameChangeHandler,\n    inputBlurHandler: lastNameBlurHandler,\n    reset: resetLastName,\n    hasError: lastNameError\n  } = useUserInput(value => value.trim() !== '');\n  const {\n    value: emailValue,\n    isValid: emailIsValid,\n    valueChangeHandler: emailChangeHandler,\n    inputBlurHandler: emailBlurHandler,\n    reset: resetemail,\n    hasError: emailError\n  } = useUserInput(value => value.trim().includes('@'));\n  const firstNameClass = firstNameError ? 'form-control invalid' : 'form-control';\n  const lastNameClass = lastNameError ? 'form-control invalid' : 'form-control';\n  const emailClass = emailError ? 'form-control invalid' : 'form-control';\n  let formIsValid = false;\n\n  if (firstNameIsValid && lastNameIsValid && emailIsValid) {\n    formIsValid = true;\n  }\n\n  const submitHandler = event => {\n    event.preventDefault();\n\n    if (!formIsValid) {\n      return;\n    }\n\n    console.log('submitted');\n    console.log(firstNameValue, lastNameValue);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: submitHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"control-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: firstNameClass,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \"First Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: firstNameValue,\n          onChange: firstNameChangeHandler,\n          onBlur: firstNameBlurHandler,\n          id: \"name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), firstNameError && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Enter a Valid Input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 27\n        }, this), \";\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: lastNameClass,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \"Last Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: lastNameValue,\n          onChange: lastNameChangeHandler,\n          onBlur: lastNameBlurHandler,\n          id: \"name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), lastNameError && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Enter a Valid Input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 26\n        }, this), \";\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: emailClass,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"E-Mail Address\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: emailValue,\n        onChange: emailChangeHandler,\n        onBlur: emailBlurHandler,\n        id: \"name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), emailError && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Enter a Valid Input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 24\n      }, this), \";\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: !formIsValid,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n\n_s(BasicForm, \"a/zgJQtZeCUP/Ao6LpvTvrmIEGw=\", false, function () {\n  return [useUserInput, useUserInput, useUserInput];\n});\n\n_c = BasicForm;\nexport default BasicForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"BasicForm\");","map":{"version":3,"sources":["C:/Users/abhis/Documents/React.js/React-Forms/src/components/BasicForm.js"],"names":["useUserInput","BasicForm","props","value","firstNameValue","isValid","firstNameIsValid","valueChangeHandler","firstNameChangeHandler","inputBlurHandler","firstNameBlurHandler","reset","resetFirstName","hasError","firstNameError","trim","lastNameValue","lastNameIsValid","lastNameChangeHandler","lastNameBlurHandler","resetLastName","lastNameError","emailValue","emailIsValid","emailChangeHandler","emailBlurHandler","resetemail","emailError","includes","firstNameClass","lastNameClass","emailClass","formIsValid","submitHandler","event","preventDefault","console","log"],"mappings":"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","sourcesContent":["import useUserInput from \"./hooks/useInput\";\n\n\n\nconst BasicForm = (props) => {\n \n  const{\n  value : firstNameValue,\n  isValid : firstNameIsValid,\n  valueChangeHandler : firstNameChangeHandler,\n  inputBlurHandler : firstNameBlurHandler,\n  reset : resetFirstName ,\n  hasError : firstNameError\n\n  } = useUserInput(value => value.trim() !== '');\n \n  const{\n    value : lastNameValue,\n    isValid : lastNameIsValid,\n    valueChangeHandler : lastNameChangeHandler,\n    inputBlurHandler : lastNameBlurHandler,\n    reset : resetLastName ,\n   hasError : lastNameError\n    } = useUserInput(value => value.trim() !== '');\n   \n   \n  const{\n    value : emailValue,\n    isValid : emailIsValid,\n    valueChangeHandler : emailChangeHandler,\n    inputBlurHandler : emailBlurHandler,\n    reset : resetemail,\n    hasError : emailError  \n  \n    } = useUserInput(value => value.trim().includes('@'));\n   \n  const firstNameClass = firstNameError ? 'form-control invalid' : 'form-control';\n  const lastNameClass = lastNameError ? 'form-control invalid' : 'form-control';\n  const emailClass = emailError ? 'form-control invalid' : 'form-control';\n\n  let formIsValid = false;\n\n  if(firstNameIsValid && lastNameIsValid && emailIsValid){\n    formIsValid = true;\n  }\n\n  const submitHandler = event =>{\n    event.preventDefault();\n\n    if(!formIsValid){\n      return;\n    }\n\n    console.log('submitted');\n    console.log(firstNameValue,lastNameValue)\n  }\n\n  return (\n    <form onSubmit = {submitHandler}>\n      <div className='control-group'>\n        <div className={firstNameClass}>\n          <label  htmlFor='name'>First Name</label>\n          <input  type='text' value = {firstNameValue} onChange ={firstNameChangeHandler} onBlur = {firstNameBlurHandler} id='name' />\n       {firstNameError && <p>Enter a Valid Input</p>};\n        </div>\n        <div className={lastNameClass}>\n          <label htmlFor='name'>Last Name</label>\n          <input type='text' value = {lastNameValue} onChange = {lastNameChangeHandler} onBlur = {lastNameBlurHandler} id='name' />\n       {lastNameError && <p>Enter a Valid Input</p>};\n        \n        </div>\n      </div>\n      <div className={emailClass}>\n        <label htmlFor='name'>E-Mail Address</label>\n        <input type='text' value = {emailValue} onChange = {emailChangeHandler} onBlur = {emailBlurHandler} id='name' />\n        {emailError && <p>Enter a Valid Input</p>};\n      \n      </div>\n      <div className='form-actions'>\n        <button disabled = {!formIsValid}>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default BasicForm;\n"]},"metadata":{},"sourceType":"module"}