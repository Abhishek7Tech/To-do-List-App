{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\abhis\\\\Documents\\\\React.js\\\\React-Forms\\\\src\\\\components\\\\SimpleInput.js\",\n    _s = $RefreshSig$();\n\n// Useref or Use State to get Input from User//\nimport { useEffect, useRef } from \"react\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SimpleInput = props => {\n  _s();\n\n  const [userName, setUserName] = useState('');\n  const [isValid, isNotValid] = useState(false);\n  const [isEntered, isNotEntered] = useState(false);\n  let formIsValid = false;\n\n  if (isValid) {\n    formIsValid = true;\n  }\n\n  useEffect(() => {\n    if (isValid) {\n      console.log('Enter a Valid Value');\n    }\n  }, [isValid]);\n  const Inputs = useRef();\n\n  const userNameHandler = event => {\n    setUserName(event.target.value);\n\n    if (event.target.value.trim() !== '') {\n      isNotValid(false);\n    }\n  };\n\n  const onBlurHandler = event => {\n    isNotEntered(true);\n\n    if (userName.trim() === '') {\n      isNotValid(true);\n    }\n  };\n\n  const formInputHandler = event => {\n    event.preventDefault();\n    const userInput = Inputs.current.value;\n\n    if (userInput.trim() === '') {\n      isNotEntered(true);\n      isNotValid(true);\n      return;\n    }\n\n    isNotValid(false);\n    console.log(userName);\n    console.log(userInput);\n  };\n\n  const isOk = isValid && isEntered;\n  const formClasses = !isOk ? 'form-control' : 'form-control invalid';\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formInputHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: formClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        ref: Inputs,\n        type: \"text\",\n        onChange: userNameHandler,\n        onBlur: onBlurHandler,\n        value: userName,\n        id: \"name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), isOk && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-text\",\n      children: \" Enter a Valid Name...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 16\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: formIsValid,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: formClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: \"Your Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        ref: Inputs,\n        type: \"email\",\n        onChange: userNameHandler,\n        onBlur: onBlurHandler,\n        value: userEmail,\n        id: \"email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), isOk && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-text\",\n      children: \" Enter a Valid Email...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 16\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: formIsValid,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SimpleInput, \"zqdo3gDRCiXZ4+9LOxBldGtSCBM=\");\n\n_c = SimpleInput;\nexport default SimpleInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"SimpleInput\");","map":{"version":3,"sources":["C:/Users/abhis/Documents/React.js/React-Forms/src/components/SimpleInput.js"],"names":["useEffect","useRef","useState","SimpleInput","props","userName","setUserName","isValid","isNotValid","isEntered","isNotEntered","formIsValid","console","log","Inputs","userNameHandler","event","target","value","trim","onBlurHandler","formInputHandler","preventDefault","userInput","current","isOk","formClasses","userEmail"],"mappings":"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","sourcesContent":["// Useref or Use State to get Input from User//\nimport { useEffect, useRef} from \"react\";\nimport { useState} from \"react\";\n\nconst SimpleInput = (props) => {\n\n const [userName,setUserName] = useState('');\n const [isValid,isNotValid] = useState(false);\n const [isEntered,isNotEntered] = useState(false);\n\n let formIsValid = false;\n\n if(isValid){\n   formIsValid = true;\n }\n\n useEffect(()=>{\nif(isValid){\n  console.log('Enter a Valid Value');\n}\n },[isValid]);\n\n\n  const Inputs = useRef();\n \n  const userNameHandler = (event)=>{\n\n    setUserName (event.target.value);\n\n    if(event.target.value.trim() !== ''){\n      isNotValid(false);\n      \n    }\n\n  }\n\n  const onBlurHandler = (event)=>{\n    isNotEntered(true);\n  \n    if(userName.trim() === ''){\n      isNotValid(true);\n      \n    }\n\n  }\n\n  const formInputHandler = (event)=>{\n    \n    event.preventDefault();\n    const userInput = Inputs.current.value;\n    \n    \n\n    if(userInput.trim() === ''){\n      isNotEntered(true);\n      isNotValid(true);\n      return; \n    }\n\n    isNotValid(false);\n\n   console.log(userName);\n    console.log(userInput);\n  }\n\n \n\n  const isOk = isValid && isEntered;\n\n  const formClasses = !isOk ? 'form-control' : 'form-control invalid';\n\n  return (\n    <form onSubmit = {formInputHandler}>\n      <div className={formClasses}>\n        <label htmlFor='name'>Your Name</label>\n        <input ref = {Inputs}  type='text' onChange = {userNameHandler} onBlur = {onBlurHandler} value = {userName}  id='name' />\n      </div>\n      {isOk && <p className = \"error-text\"> Enter a Valid Name...</p>}\n      <div className=\"form-actions\">\n        <button disabled = {formIsValid} >Submit</button>\n      </div>\n\n      <div className={formClasses}>\n        <label htmlFor='email'>Your Email</label>\n        <input ref = {Inputs}  type= 'email' onChange = {userNameHandler} onBlur = {onBlurHandler} value = {userEmail}  id='email' />\n      </div>\n      {isOk && <p className = \"error-text\"> Enter a Valid Email...</p>}\n      <div className=\"form-actions\">\n        <button disabled = {formIsValid} >Submit</button>\n      </div>\n\n    </form>\n  );\n};\n\nexport default SimpleInput;\n"]},"metadata":{},"sourceType":"module"}