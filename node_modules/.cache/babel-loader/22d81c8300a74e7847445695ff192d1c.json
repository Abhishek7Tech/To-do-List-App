{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\abhis\\\\Documents\\\\My Web Sites\\\\Tasks\\\\src\\\\components\\\\TaskList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Delete from './Delete';\nimport styles from './TaskList.module.css';\nimport NoTasks from './Notask';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction TaskList(props) {\n  _s();\n\n  // localStorage.setItem(props.task , JSON.stringify(props.des));\n  // console.log(localStorage.getItem(props.task));\n  const store = [];\n\n  for (let i = 0; i < localStorage.length; i++) {\n    // console.log(localStorage.getItem(localStorage.key(i)));\n    store.push({\n      id: localStorage.key(i),\n      des: localStorage.getItem(localStorage.key(i))\n    });\n  } //  const [background , setBackground] = useState(styles.section);\n  // const completed = [];\n\n\n  const [complete, setIsComplete] = useState([]);\n\n  const onCompleteHandler = event => {\n    setIsComplete([...complete, event.currentTarget.id]); //   let ids = event.currentTarget.id;\n    //   // array.push(ids);\n    // completed = [ids,...completed];\n    // console.log(`Length : ${complete.length}`);\n    //   for(let i = 0; i < completed.length; i++){\n    //     setIsComplete(completed[i]);\n    //   }\n  };\n\n  let [del, setDel] = useState(false);\n  let [deleteID, setDelID] = useState(false);\n\n  const onDeleteHandler = event => {\n    const ids = event.currentTarget.id; // console.log('TaksList clicked:' + ids); \n\n    setDel(!del);\n    setDelID(ids); // console.log(ids);\n    // closeHandler();\n  }; // useEffect (() => {\n  //   \n  //   closeHandler();\n  // },[del]\n  // );  \n\n\n  const [deleted, setDeleted] = useState(store);\n\n  const deleteListItem = id => {\n    // console.log(\"Dlete.js :\" + deleteID);\n    // console.log(\"Dlete.js :\" + deleteID);\n    console.log(id);\n    const filteredStore = deleted.filter(task => task.id !== id); // console.log(localStorage);\n\n    setDeleted(filteredStore);\n\n    if (filteredStore.length === 0) {\n      localStorage.removeItem(id);\n    }\n\n    ;\n    console.log(filteredStore);\n  };\n\n  let sortedStore = store.sort((a, b) => a - b);\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.div,\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: styles.ul,\n        children: store.map(task => {\n          const checked = complete.includes(task.id);\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            className: styles.list,\n            children: /*#__PURE__*/_jsxDEV(\"section\", {\n              className: `${checked === true ? styles.completeSection : styles.section}`,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: styles.heder,\n                children: /*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: [\" Task No:\", task.id, \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 106,\n                  columnNumber: 9\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 7\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: styles.task,\n                children: /*#__PURE__*/_jsxDEV(\"h2\", {\n                  children: [\" \", task.des, \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 109,\n                  columnNumber: 9\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 7\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: styles.btn,\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  className: `${checked === false ? styles.del : styles.ondel}`,\n                  id: task.id,\n                  onClick: onDeleteHandler,\n                  type: \"submit\",\n                  children: \"Delete\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 113,\n                  columnNumber: 9\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: `${checked === false ? styles.com : styles.comDisabled}`,\n                  id: task.id,\n                  onClick: onCompleteHandler,\n                  type: \"submit\",\n                  children: \"Complete\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 114,\n                  columnNumber: 9\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 7\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 9\n            }, this)\n          }, task.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 10\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 4\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 4\n    }, this), del && /*#__PURE__*/_jsxDEV(Delete, {\n      store: store,\n      id: deleteID,\n      remove: () => {\n        deleteListItem(deleteID);\n      },\n      setDel: setDel\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 11\n    }, this), store.length === 0 && /*#__PURE__*/_jsxDEV(NoTasks, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 25\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 4\n  }, this);\n}\n\n_s(TaskList, \"8HB6tehArnQLPBRu7PAvhpvMLN4=\");\n\n_c = TaskList;\nexport default TaskList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TaskList\");","map":{"version":3,"sources":["C:/Users/abhis/Documents/My Web Sites/Tasks/src/components/TaskList.js"],"names":["React","useState","Delete","styles","NoTasks","TaskList","props","store","i","localStorage","length","push","id","key","des","getItem","complete","setIsComplete","onCompleteHandler","event","currentTarget","del","setDel","deleteID","setDelID","onDeleteHandler","ids","deleted","setDeleted","deleteListItem","console","log","filteredStore","filter","task","removeItem","sortedStore","sort","a","b","div","ul","map","checked","includes","list","completeSection","section","heder","btn","ondel","com","comDisabled"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport Delete from './Delete';\r\nimport styles from './TaskList.module.css';\r\nimport NoTasks from './Notask';\r\n\r\n\r\nfunction TaskList(props) {\r\n\r\n\r\n\r\n// localStorage.setItem(props.task , JSON.stringify(props.des));\r\n// console.log(localStorage.getItem(props.task));\r\n  \r\n  const store = [];\r\n\r\n\r\n  for(let i = 0; i < localStorage.length;i++){\r\n    // console.log(localStorage.getItem(localStorage.key(i)));\r\n       store.push({\r\n         id: localStorage.key(i),\r\n         des:localStorage.getItem(localStorage.key(i))\r\n       });\r\n  }\r\n\r\n\r\n//  const [background , setBackground] = useState(styles.section);\r\n\r\n// const completed = [];\r\n\r\nconst [complete , setIsComplete] = useState([]);\r\n\r\nconst onCompleteHandler = (event) => {\r\n\r\n  setIsComplete([...complete , event.currentTarget.id])\r\n  \r\n//   let ids = event.currentTarget.id;\r\n\r\n//   // array.push(ids);\r\n// completed = [ids,...completed];\r\n\r\n// console.log(`Length : ${complete.length}`);\r\n \r\n//   for(let i = 0; i < completed.length; i++){\r\n//     setIsComplete(completed[i]);\r\n//   }\r\n};\r\n\r\nlet [del ,setDel] = useState(false);\r\n\r\n  let [deleteID , setDelID] = useState(false);\r\n\r\n\r\n  const onDeleteHandler = (event) => {\r\n    \r\n\r\n    const ids = event.currentTarget.id; \r\n    // console.log('TaksList clicked:' + ids); \r\n    setDel(!del);\r\n      \r\n    setDelID(ids);\r\n    // console.log(ids);\r\n    // closeHandler();\r\n\r\n  \r\n  };\r\n\r\n// useEffect (() => {\r\n//   \r\n//   closeHandler();\r\n// },[del]\r\n\r\n// );  \r\n\r\nconst [deleted ,setDeleted] = useState(store);\r\n\r\n  const deleteListItem = (id) => {\r\n  // console.log(\"Dlete.js :\" + deleteID);\r\n  // console.log(\"Dlete.js :\" + deleteID);\r\n   \r\n   console.log(id);  \r\n    const filteredStore = deleted.filter((task) => task.id !== id);\r\n    // console.log(localStorage);\r\n    setDeleted(filteredStore);\r\n\r\n  \r\n    if(filteredStore.length === 0){\r\n      localStorage.removeItem(id);\r\n    };\r\n    console.log(filteredStore);\r\n    \r\n   }\r\n\r\nlet sortedStore = store.sort((a,b) => a- b);\r\n\r\n return (\r\n   <React.Fragment>\r\n   <div className= {styles.div}>\r\n   <ul className = {styles.ul}>\r\n    {store.map((task ) => {\r\n      const checked = complete.includes(task.id);\r\n      \r\n       return(\r\n         <li  className ={styles.list}  key = {task.id}>\r\n        <section className = {`${checked === true ? styles.completeSection : styles.section }`}>\r\n      <div className = {styles.heder}>\r\n        <h3> Task No:{task.id} </h3>\r\n      </div>\r\n      <div className = {styles.task}>\r\n        <h2> {task.des} </h2>\r\n      </div>\r\n\r\n      <div className = {styles.btn}>\r\n        <button className =  {`${checked === false ? styles.del : styles.ondel}`} id = {task.id} onClick = {onDeleteHandler } type=\"submit\">Delete</button>\r\n        <button className =  {`${checked === false ? styles.com : styles.comDisabled}`} id = {task.id} onClick ={onCompleteHandler} type='submit'>Complete</button>\r\n      </div>\r\n    </section>\r\n     </li>\r\n  )\r\n  \r\n})}\r\n </ul>\r\n </div>\r\n {del  && <Delete store = {store} id = {deleteID } remove = {() => {deleteListItem(deleteID)}} setDel = {setDel}/>} \r\n {store.length === 0 && <NoTasks />}\r\n</React.Fragment>\r\n\r\n); \r\n\r\n}\r\n\r\nexport default TaskList;\r\n"]},"metadata":{},"sourceType":"module"}